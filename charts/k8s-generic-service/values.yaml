# Default values for generic_service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

appName: zaservice
releaseVersion: not-specified
envVars: []

geEnv: "staging"
deploySHA: "xxxxxxx"

command:
  # - "sleep"
args:
  # - 3600
  # - "boop"

replicaCount: 1

# Tune deployment strategy. Possible values are Recreate or RollingUpdate.
deployStrategy: RollingUpdate

healthProbe:
  port: 3000
  # http and tcp are mutually exclusive options
  http:
    enabled: false
    adapter:
      name: grpc-health-adapter
      enabled: false
      liveness:
        path: /adapter-health
      image:
        repository: quay.io/georgedriver/grpc-health-adapter
        tag: v0.0.110
        pullPolicy: IfNotPresent
      envVars:
        - name: SERVICE_ADDR
          value: "localhost:7777"
        - name: HTTP_SERVER_ADDR
          value: "localhost:8080"
      resources:
        requests:
          cpu: .1
          memory: 128Mi
  tcp:
    enabled: false
  exec:
    enabled: false
  liveness:
    initialDelaySeconds: 120
    periodSeconds: 30
    path: /health
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 1
  readiness:
    initialDelaySeconds: 60
    periodSeconds: 10
    path: /ready
    failureThreshold: 3
    successThreshold: 1
    timeoutSeconds: 1

image:
  repository: nginx
  tag: stable
  pullPolicy: IfNotPresent

# Enable HPA (HorizontalPodAutoscaler) to have your application auto-scale based on CPU usage, memory usage or both
# for HPA to work, you must set resources.requests.cpu / resources.requests.cpu (or both).
hpa:
  enabled: false
  replicas:
    # Set the number of minimum replicas for your service
    min: 1
    # Set the number of maximum replicas for your service
    max: 5
  # Set AVG CPU utilization value (use integer as percentge e.g 75 for 75%).
  # If CPU usage is higher than this number HPA will scale out your pods up
  # until this value is achived on all pods, or to the maximum.
  # It will scale in when the usage drops, until it reaches minimum
  cpuUtilization: 75
  # Set target memory usage value.
  # If Memory usage reaches that value your pod will scale up,
  # until this value achived on all pods (or up to the maximum).
  # It will scale in when the usage drops, until it reaches minimum
  memoryUtilization: ''

deployment:
  annotations: {}

service:
  # type: LoadBalancer
  # annotations:
  #   service.beta.kubernetes.io/alicloud-loadbalancer-address-type: "intranet"
  enabled: true
  ports:
    - port: 80
      containerPort: 3000
      name: http
      protocol: TCP

ingress:
  istio: false
  enabled: false
  grpc: false
  internal: false
  alicloud: false
  port: 80
  server_snippets: []
  #   - "http2_min_requests 5000;"
  #   - "grpc_min_requests 10000;"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []

  # https://github.com/kubernetes/ingress-nginx/blob/master/docs/examples/auth/basic/README.md
  basicAuth:
    enabled: false
    secretName: myAuthSecret
  # Mandatory if GRPC enabled
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

monitoring:
  enabled: false
  team: ZaService
  servicePortName: http
  servicePath: "/metrics"

alerts:
  enableDefaultAlerts: false
  defaultAlerts:
  - name: noScrapeTargets
    expr: up{job="<JOBNAME>", namespace="<NAMESPACE>"} == 0
    summary: No scrape endpoints found for Job
    description: No scrape endpoint found for job <NAMESPACE>/<JOBNAME>
    timeToFire: 5m
    severity: warning
    runbook_url: ""
  - name: noScrapeTargets
    expr: up{job="<JOBNAME>", namespace="<NAMESPACE>"} == 0
    summary: No scrape endpoints found for Job
    description: No scrape endpoint found for job <NAMESPACE>/<JOBNAME>
    timeToFire: 20m
    severity: critical
    runbook_url: ""
  extraAlerts: []
  # - name: TestAlert
  #   summary: This is a test alert that will always fire
  #   description: This alert is genertated for TEST reasons - it will always fire as  job is always eq or higer then 0 (currently {{ $value }})
  #   expr: count(up{namespace="<NAMESPACE>",appName="<APPNAME>",release="<RELEASENAME>"}) >= 0
  #   timeToFire: 5m
  #   severity: warning
  #   runbook_url: ""
  #   labels:
  #     team: "observability"



# cronjob name (subdomain) must consist of lower case alphanumeric characters, '-' or '.', and must
# start and end with an alphanumeric character (e.g. 'example.com', regex used for validation
# is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*')
cronjobs: []
  # - schedule: "*/5 * * * *"
  #   successfulJobsHistoryLimit: 3
  #   failedJobsHistoryLimit: 3
  #   concurrencyPolicy: Allow
  #   command: ["echo"]
  #   args: ["Hello world"]
  #   repository: quay.io/georgedriver/k8s-sample-app
  #   tag: latest
  #   name: "someCronJob"
  #   restartPolicy: OnFailure
  # - schedule: "*/10 * * * *"
  #   successfulJobsHistoryLimit: 3
  #   failedJobsHistoryLimit: 3
  #   concurrencyPolicy: Forbid
  #   command: ["echo"]
  #   args: ["Bye", "world"]
  #   repository: quay.io/georgedriver/k8s-sample-app
  #   tag: latest
  #   name: "someOtherJob"
  #   restartPolicy: OnFailure

vault:
  enabled: false

volumes: []
  # - name: config
  #   subPath: "/boop"
  #   readOnly: true
  #   configMap:
  #     name: someConfigMap
  #   mountPath: /config

  # - name: boop
  #   emptyDir:
  #     medium: Memory
  #   mountPath: /boop

  # - name: moop
  #   persistentVolumeClaim:
  #     claimName: task-pv-claim
  #   mountPath: /moop

runJob:
  enabled: false
  name: MigrateJob
  activeDeadlineSeconds: 86400
  backoffLimit: 2
  image:
    repository: none
    tag: latest
  command:
    - "sleep"
    - "3600"

flywayJob:
  enabled: false
  name: MigrateFlywayJob
  databaseType: mysql
  sqlImage:
    repository: none
    tag: latest
  flywayImage:
    repository: boxfuse/flyway
    tag: latest

grpcTranscoder:
  enabled: false
  printOptions:
    addWhiteSpace: true
    alwaysPrintPrimitiveFields: true
    alwaysPrintEnumsAsInts: false
    preserveProtoFieldNames: false

configMapEnvVars: []
configMaps: []
# - name: marquez-config
#   labels:
#     env: "staging"
#   data:
#     config.yml: |-
#       server:
#         applicationConnectors:
#         - type: http
#           port: ${MARQUEZ_PORT:-5000}
#       db:
#         driverClass: org.postgresql.Driver
#         url: jdbc:postgresql://${POSTGRES_HOST:-localhost}:${POSTGRES_PORT:-5432}/${POSTGRES_DB}
#         user: ${POSTGRES_USER}
#         password: ${POSTGRES_PASSWORD}

serviceAccount:
  enabled: false
  # name: serviceAccountName

autorunRestart:
  enabled: false
  # label: autorun_system_name_restartable

# hostAliases:
# - ip: "127.0.0.1"
#   hostnames:
#   - "foo.local"
#   - "bar.local"
# - ip: "10.1.2.3"
#   hostnames:
#   - "foo.remote"
#   - "bar.remote"

privileged: false
