{{- $root := . -}}

{{- if and (.Values.ingress.enabled) (not .Values.ingress.istio) -}}
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ .Values.appName }}-ingress

  annotations:
  {{- if .Values.ingress.annotations }}
{{ toYaml .Values.ingress.annotations | indent 4 }}
  {{- end }}
    {{- if .Values.ingress.grpc }}
    kubernetes.io/ingress.class: nginx-grpc
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    {{- end }}
    nginx.ingress.kubernetes.io/server-snippet: |
    {{- if .Values.ingress.grpc }}
      listen 8443 ssl http2;
      http2_max_requests 100000;
    {{- end }}
    {{- range $value := .Values.ingress.server_snippets }}
      {{ $value }}
    {{- end }}

    {{- if .Values.ingress.internal}}
    kubernetes.io/ingress.class: nginx-internal
    {{- end }}

    {{- if .Values.ingress.alicloud }}
    nginx.ingress.kubernetes.io/secure-backends: "true"
    kubernetes.io/ingress.class: "nginx"
    certmanager.k8s.io/cluster-issuer: "letsencrypt-prod"
    certmanager.k8s.io/acme-challenge-type: http01
    kubernetes.io/ingress.allow-http: "false"
    {{- end }}

    {{- if .Values.ingress.basicAuth.enabled }}
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: {{ .Values.ingress.basicAuth.secretName }}
    {{- end }}


spec:

{{- if .Values.ingress.tls }}
  tls:
  {{- range .Values.ingress.tls }}
    - hosts:
      {{- range .hosts }}
        - {{ . | quote }}
      {{- end }}
      secretName: {{ .secretName }}
  {{- end }}
{{- end }}

  rules:
  {{- range .Values.ingress.hosts }}
    - host: {{ . | quote }}
      http:
        paths:
          - path: {{ $root.Values.ingress.path }}
            backend:
              serviceName: {{ $root.Values.appName }}-service
              servicePort: {{ $root.Values.ingress.port }}
  {{- end }}
{{- end }}
